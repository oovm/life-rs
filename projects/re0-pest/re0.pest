program = _{SOI ~ declare_statement* ~ EOI}
statements = {
    if_statement |
    expression
}
declare_statement = {SYMBOL ~ SYMBOL ~ modifiers? ~ declare_block}
/*====================================================================================================================*/
declare_block = {
    "{" ~ declare_item* ~ "}"
}
declare_item  = _{
    SEPARATOR |
    declare_pair
}
declare_pair  =  {
    Key ~ COLON? ~ declare_block |
    Key ~ COLON? ~ list_block |
    Key ~ COLON ~ statements
}
Key           = {StringNormal|SYMBOL|Integer}
COLON         = @{":"|"："}
/*====================================================================================================================*/
if_statement = {
    kw_if ~ expression ~ block
  | kw_if ~ expression ~ block ~ else_statement
}
else_statement = {
    "else" ~ block
}
block = {"{" ~ statements* ~ "}"}
kw_if = {
    "若"| "如果" | "if"
}
kw_else = {
    "否则" | "else"
}
/*====================================================================================================================*/
expression = {
    term ~ (op_infix ~ term)*
}
term = {data ~ call_suffix?}
call_suffix = {
    "(" ~ (expression ~ (SEPARATOR ~ expression)* ~ SEPARATOR?)? ~ ")"
}
op_infix = {
    ">" | "大于" | ">=" | "大于等于" | "不小于" |
    "<" | "小于" | "<=" | "小于等于" | "不大于" |
    "==" | "等于" | "!=" | "不等于" |
    "+=" | "-="
}
/*====================================================================================================================*/
list_block =  {
    "[" ~ (data|SEPARATOR)* ~ "]"
  | "【" ~ (data|SEPARATOR)* ~ "】"
}
/*====================================================================================================================*/
data = !{
    Special|Number
  | String | SYMBOL
}
/*====================================================================================================================*/
///#D19A66
Special = @{"true"|"false"|"null"}
/*====================================================================================================================*/
//!#D19A66: SignedNumber
Number       = ${(SignedNumber) ~ SYMBOL?}
SignedNumber = ${Sign? ~ (Decimal|DecimalBad|Integer)}
Decimal      = ${Integer ~ Dot ~ ("_"? ~ ASCII_DIGIT)*}
DecimalBad   = ${Integer ~ Dot|Dot ~ ("_"? ~ ASCII_DIGIT)*}
//Integer    = @{"0"|ASCII_NONZERO_DIGIT ~ ("_"? ~ ASCII_DIGIT)*}
Integer      = @{ASCII_DIGIT ~ ("_"? ~ ASCII_DIGIT)*}
Sign         = @{"+"|"-"}
/*====================================================================================================================*/
//!#3C963C: String|InlineString|InlineString2|RestLineText
String       = !{StringNormal}
StringNormal = ${
    "'" ~ NS* ~ "'"
  | "\"" ~ NS* ~ "\""
  | "“" ~ NS* ~ "”"
  | "‹" ~ NS* ~ "›"
  | "«" ~ NS* ~ "»"
}
NS = @{
    "\\u" ~ ASCII_HEX_DIGIT{4}
  | "\\u" ~ "{" ~(ASCII_HEX_DIGIT|SPACE_SEPARATOR)+ ~ "}"
  | "\\" ~ ANY
  | (!("'"|"\""|"\\") ~ ANY)+
}
/*====================================================================================================================*/
///#61AFEF
SYMBOL    = @{(XID_START|"_") ~ (XID_CONTINUE|"_")*}
modifiers =  {SYMBOL+}
Dot       = @{"."}
/*====================================================================================================================*/
///Gray
COMMENT          = _{LineComment|OmitComment}
WHITESPACE       = _{NEWLINE|SPACE_SEPARATOR|"\t"}
LineComment      = ${("///"|"、") ~ (!NEWLINE ~ ANY)*}
OmitComment      = _{("//") ~ (!NEWLINE ~ ANY)*}
MultiLineComment = ${"/*" ~ (MultiLineComment | !"*/" ~ ANY)* ~ "*/"}
SEPARATOR        = _{","|";"|"，"|"；"}